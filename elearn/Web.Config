<?xml version="1.0"?>
<!-- 
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration xmlns="http://schemas.microsoft.com/.NetConfiguration/v2.0">
	<appSettings>
		<add key="DefaultEmail" value="info@domain.com"/>
	</appSettings>
	<connectionStrings>
		<add name="elearnCon" connectionString="data source=.\sqlexpress;attachdbfilename=|DataDirectory|elearn.mdf;integrated security=true;User Instance=true" providerName="System.Data.SqlClient"/>
		<add name="elearnConnectionString1" connectionString="Data Source=.\SQLEXPRESS;AttachDbFilename=|DataDirectory|\elearn.mdf;Integrated Security=True;User Instance=True" providerName="System.Data.SqlClient"/>
	</connectionStrings>
	<system.web>
		<!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
        -->
		<roleManager enabled="true"/>
		<compilation debug="true">
			<assemblies>
				<add assembly="System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/></assemblies></compilation>
		<!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
		<authentication mode="Forms"/>
		<membership>
			<providers>
				<clear/>
				<add connectionStringName="LocalSqlServer" requiresUniqueEmail="false" passwordFormat="Encrypted" minRequiredNonalphanumericCharacters="0" minRequiredPasswordLength="6" name="AspNetSqlMembershipProvider" type="System.Web.Security.SqlMembershipProvider, System.Web,Version=2.0.0.0, Culture=neutral,&#xA;          PublicKeyToken=b03f5f7f11d50a3a" enablePasswordRetrieval="true" enablePasswordReset="true" requiresQuestionAndAnswer="false"/>
			</providers>
		</membership>
		<machineKey validationKey="340760408B7ED7CC0CE46E1B5D4741EBF4C0D9AE64C706F9A86ABC7B2472C42E9593E3D597BDC55C5E8B17D1BDDC92F207AF7DD4D60476F39B8330D396E13FC4" decryptionKey="D2406C0A567E863236B61436AB02601442FB6E53ABEC7887A878896AA00B16DC" validation="SHA1" decryption="AES"/>
		<!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
	</system.web>
</configuration>
